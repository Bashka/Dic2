Операции над данными.
СТРОКИ
Для строк определена операция конкатенации, которая производится автоматически для всех расположенных рядом строк ('a' 'b' => 'ab').

Если строка заключена в двойные кавычки, то обрабатываются следующие спецсимволы:
* \n - новая строка;
* \r - возврат каретки;
* \t - табуляция.

Если строка не заключена в кавычки, то обрабатываются следующие спецсимволы для поиска файлов в текущем каталоге утилиты:
* * - любой набор любых символов (* - все файлы текущего каталога);
* ? - один любой символ (? - все файлы текущего каталога, имя которых содержит один символ);
* [abc] - символ a или b или c (fil[ei] - file или fili);
* [a-z] - любой символ из диапазона;
* file{1,2,3} - повтор строки с символом (file1 file2 file3);
* file{1..3} - повтор строки с символом из диапазона (file1 file2 file3).

ЧИСЛА
Для математических операций над числами используется следующая запись:

  $(( <число> <оператор> <число> ));

Конструкция позволяет вычислять целые выражения. В качестве "оператора" могут использоваться следующие знаки:
* + - сложение;
* - - вычитание;
* * - умножение;
* / - деление;
* ** - степень;
* % - взятие из под модуля.

ПЕРЕМЕННЫЕ
Запись ${<переменная>} позволяет применять некоторые логические вычисления при получении значения переменной, в частности:
* ${<переменная>-<значение>} - значение переменной, если она определена, иначе "значение";
* ${<переменная>=<значение>} - значение переменной, если она определена, иначе переменная принимает "значение", что и возвращается;
* ${<переменная>?<сообщение>} - значение переменной, если она определена, иначе вывести "сообщение" и завершить работу скрипта;
* ${<переменная>+<значение>} - если переменная определена, то "значение", иначе ничего;
* ${<переменная>/<regex>/<замена>} - значение переменной, все вхождения regex в которой заменены на строку "замены";
* ${<переменная>:<позиция>:<длина>} - получение подстроки от "позиции" (отсчет начинается с 1) указанной "длины".
