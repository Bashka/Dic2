Циклическая структура for.
Структура for позволяет повторно выполнять блок кода до достижения некоторого условия. Данная структура делиться на два типа:
1. Классический цикл со счетчиком;
2. Цикл по элементам списка.

КЛАССИЧЕСКИЙ ЦИКЛ
Классический цикл for имеет следующий вид:

  for(<инициализация>; <условие>; <шаг>){
    <тело>
  }

Здесь команда for состоит из трех необязательных элементов:
1. Инициализация - элемент, определяющий начальное значение счетчика цикла. Данный элемент как правило содержит запись вида $i = 0;
2. Условие - элемент условия, проверяемого перед каждой итерацией цикла. Данный элемент как правило содержит запись вида $i < <конечное значение>;
3. Шаг - элемент, определяющий действие после каждой итерации цикла и отвечающий за изменение счетчика. Данный элемент как правило содержит запись вида $i++.

Цикл выполняется в следующем порядке:
1. Выполнение элемента "инициализации";
2. Проверка "условия";
3. Если "условие" истино, выполнение "тела" цикла, иначе передача управления строке, следующей за done;
4. Выполнение элемента "шаг";
5. Возврат к шагу 2.

Ниже приведен пример классического цикла, выводящего числа от 10 до 1:

  for($i = 10; $i > 0; $i--){
    print $i;
  }

ЦИКЛ ПО ЭЛЕМЕНТАМ СПИСКА
Цикл по элементам списка имеет следующий вид:

  foreach <переменная> (<массив>){
    <тело>
  }

Здесь команда foreach последовательно присваивает "переменной" слова из "массива" и после каждого присваивания выполняет "тело" цикла.

Ниже приведен пример цикла по элементам списка, выводящего на экран дни недели:

  foreach my $v (('Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс')){
    print $v;
  }
